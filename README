# Proctal

Manipulates the address space of a running program on Linux.

Comes with a command line interface and a C library.


## Example

### CLI

Having acquired the right permissions to fiddle with running programs (root):

	$ proctal read 22002 1803acc
	123
	$ proctal write 22002 1803acc 124
	$ proctal read 22002 1803acc
	124

### C library

Linking dynamically or statically to libproctal:

	// Declares the libraries' functions.
	#include <proctal.h>

	int main (int argc, char **argv)
	{
		int val;

		// Attempting to read an int from an other process.
		if (proctal_read_int(22002, (void *) 0xBEEF, &val) != 0) {
			return 1; // Failed to read.
		}

		val += 1;

		// Attempting to write an int to an other process.
		if (proctal_write_int(22002, (void *) 0xBEEF, val) != 0) {
			return 1; // Failed to write.
		}

		return 0;
	}


## Usage

### CLI

Command used to read a value:.

	$ proctal read [options] <pid> <address>

Command used to write a value.

	$ proctal write [options] <pid> <address> <value>

Passing --help in [options] will explain every behavior.


### C library

Can be used by linking to libproctal and including proctal.h

Available functions are documented in the header file.


## Installation

Proctal provides a 3 step installation process commonly employed by Linux
C/C++ programs:

	$ ./configure
	$ make
	$ make install


## License

This program is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
